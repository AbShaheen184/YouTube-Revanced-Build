name: Automate YouTube ReVanced APK

on:
  workflow_dispatch:

jobs:
  patch-and-publish:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3 python3-pip
        pip install beautifulsoup4 requests

    - name: Fetch Latest YouTube APK
      run: |
        # Run Python script to get the latest APK URL
        python3 <<EOF
        import requests
        from bs4 import BeautifulSoup

        def get_latest_youtube_apk_url():
            base_url = "https://www.apkmirror.com/apk/google-inc/youtube/"
            response = requests.get(base_url)

            if response.status_code == 200:
                soup = BeautifulSoup(response.content, 'html.parser')

                latest_version = soup.find('a', class_='fontBlack')
                if latest_version:
                    latest_version_url = "https://www.apkmirror.com" + latest_version['href']
                    print(f"Latest YouTube version page: {latest_version_url}")

                    version_response = requests.get(latest_version_url)
                    if version_response.status_code == 200:
                        version_soup = BeautifulSoup(version_response.content, 'html.parser')
                        
                        download_link = version_soup.find('a', text="Download APK")
                        if download_link:
                            download_url = "https://www.apkmirror.com" + download_link['href']
                            print(f"Download URL: {download_url}")
                            return download_url
                        else:
                            print("No download link found.")
                else:
                    print("No latest version link found.")
            return None

        latest_apk_url = get_latest_youtube_apk_url()
        if latest_apk_url:
            print(f"::set-output name=apk_url::{latest_apk_url}")
        EOF

    - name: Download YouTube APK
      run: |
        wget "${{ steps.fetch.outputs.apk_url }}" -O youtube.apk

    - name: Download ReVanced CLI, Patches, and Integrations
      run: |
        wget https://github.com/ReVanced/revanced-cli/releases/latest/download/revanced-cli.jar -O revanced-cli.jar
        wget https://github.com/ReVanced/revanced-patches/releases/latest/download/patches-latest.rvp -O revanced-patches.rvp
        wget https://github.com/ReVanced/revanced-integrations/releases/latest/download/app-release-unsigned.apk -O integrations.apk

    - name: Patch YouTube APK
      run: |
        java -jar revanced-cli.jar \
            -m integrations.apk \
            -b revanced-patches.rvp \
            -a youtube.apk \
            -o youtube-revanced.apk

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: "youtube-revanced-$(date +%Y%m%d)"
        release_name: "YouTube ReVanced $(date +%Y-%m-%d)"
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload APK to Release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: youtube-revanced.apk
        asset_name: youtube-revanced.apk
        asset_content_type: application/vnd.android.package-archive
